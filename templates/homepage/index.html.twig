{% extends 'base.html.twig' %}

{% block title %}Accueil
{% endblock %}

{% block body %}

	<style>
		#bg-img {
			background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('/assets/img/homepage.jpg');
			background-size: cover;
			background-repeat: no-repeat;
			background-position: center;
			height: 90vh;
		}

		.img-trick {
			width: 100%;
			height: 150px;
		}

		.spinner-border {
			display: none;
		}
	</style>

	<div class="container-fluid d-flex align-items-center justify-content-center flex-column" id="bg-img">
		<div class="container p-5 d-flex align-items-center justify-content-center">
			<section class="p-5 d-flex align-items-center justify-content-center">
				<div class="p-5 d-flex align-items-center justify-content-center flex-column">
					<h1 class="text-light">Snowtricks</h1>
					<p class="text-light">Un espace de discussion pour tout les passion√©s de snowboard !</p>
				</div>
			</section>
		</div>
		<div class="d-flex align-items-center justify-content-end w-100">
			<a href="#tricksContainer">
				<img src="/assets/img/arrow-down-square-fill.svg">
			</a>
		</div>
	</div>

	<div class="container-fluid">
		<div class="container">
			<div class="row d-flex align-items-center justify-content-center" id="tricksContainer">
				{% for trick in tricks %}
					<div class="col-s-12 col-m-6 col-lg-4 trick" id="trick{{ trick.slug}}">
						<div class="card bg-light shadow m-5">

							{% set mainImage = null %}
							{% for image in trick.images %}
								{% if image.isMain %}
									{% set mainImage = image %}
								{% endif %}
							{% endfor %}

							{% if mainImage %}
								<img src="/uploads/{{ mainImage.name }}" class="card-img-top img-trick" alt="...">
							{% else %}
								<img src="/assets/img/default.jpg" class="card-img-top img-trick" alt="...">
							{% endif %}

							<div class="card-body">
								<h5 class="card-title">
									<div class="d-flex justify-content-between align-items-center">
										<a class="btn btn-primary" href="{{ path('trick_show', {slug: trick.slug}) }}">{{
                                    trick.name }}</a>

										{% if app.user %}
											<div>
												<a class="btn btn-light" href="{{ path('trick_edit', {slug: trick.slug}) }}">
													<i class="bi bi-pencil-fill"></i>
												</a>
												<button type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#exampleModal{{ trick.id }}">
													<i class="bi bi-trash-fill"></i>
												</button>
											</div>
											<div class="modal fade" id="exampleModal{{ trick.id }}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
												<div class="modal-dialog">
													<div class="modal-content">
														<div class="modal-header">
															<h5 class="modal-title" id="exampleModalLabel">Delete "{{ trick.name }}"
															</h5>
															<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
														</div>
														<div class="modal-body">
															Are you sure you want to delete "{{ trick.name }}" ?
														</div>
														<div class="modal-footer">
															<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
															<button type="button" class="btn btn-danger delete-trick" data-trickid="{{ trick.id }}" data-trickslug="{{ trick.slug }}" data-csrftoken="{{ csrf_token('delete' ~ trick.slug) }}" data-target="#trick{{ trick.slug}}">
																<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" id="spinner-{{ trick.slug }}"></span>
																Delete
															</button>
														</div>
													</div>
												</div>
											</div>
										{% endif %}
									</div>
								</h5>
							</div>
						</div>
					</div>
				{% endfor %}
			</div>

			<div class="w-100 d-flex align-items-center justify-content-center">
				<div id="loadingSpinner" class="spinner-border text-primary" role="status">
					<span class="visually-hidden">Loading...</span>
				</div>
			</div>


			<div class="text-center mt-4">
				<button id="loadMoreButton" class="btn btn-primary">Load More</button>
			</div>
			<div class="d-flex align-items-center justify-content-end w-100">
				<a href="#tricksContainer">
					<img src="/assets/img/arrow-up-square-fill.svg">
				</a>
			</div>
		</div>


	</div>

<script>
    let tricks = document.querySelectorAll('.trick');
    let offset = tricks.length;
    document.getElementById('loadingSpinner').style.display = 'none';


    function loadMoreTricks() { // Show the loading spinner
        document.getElementById('loadingSpinner').style.display = 'block';
		tricks = document.querySelectorAll('.trick');
		offset = tricks.length;
        fetch(`/get-more-tricks/${offset}`).then(response => response.text()).then(data => {
            if (data.length > 0) {
                const tricksContainer = document.getElementById('tricksContainer');
                tricksContainer.innerHTML += data;
            } else { // Disable the "Load More" button if no more tricks are available
                document.getElementById('loadMoreButton').disabled = true;
            }

            // Hide the loading spinner once the tricks are added
            document.getElementById('loadingSpinner').style.display = 'none';
        }).catch(error => {
            console.error('Error fetching more tricks:', error);

            // Hide the loading spinner in case of an error
            document.getElementById('loadingSpinner').style.display = 'none';
        });
    }

    document.getElementById('loadMoreButton').addEventListener('click', loadMoreTricks);




	// Delete trick via AJAX
	document.querySelectorAll('.delete-trick').forEach(function (button) {
        button.addEventListener('click', function () {
            var trickSlug = this.dataset.trickslug;
            var trickId = this.dataset.trickid;
            var csrfToken = this.dataset.csrftoken;
            var targetElementId = this.dataset.target;
			var modalDelete = document.querySelector('#exampleModal' + trickId)
			var modalBackdropDelete = document.querySelector('.modal-backdrop')
			var spinner = document.querySelector('#spinner-' + trickSlug);

			var xhr = new XMLHttpRequest();
            xhr.open('DELETE', '/tricks/delete/' + trickSlug, true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.setRequestHeader('X-CSRF-TOKEN', csrfToken); // Set the CSRF token as a header

			spinner.style.display = "inline-block";

            xhr.onload = function () {
                if (xhr.status === 200) {
                    var response = JSON.parse(xhr.responseText);
                    if (response.message === 'Trick deleted successfully') { // Handle success, e.g., remove the image element from the page
                        var trickElement = document.querySelector(targetElementId);
                        if (trickElement) {
                            trickElement.parentNode.removeChild(trickElement);
                        }
						// Remove modal
						modalDelete.parentNode.removeChild(modalDelete);
						modalBackdropDelete.parentNode.removeChild(modalBackdropDelete)
						document.querySelector('body').style.overflow = "auto";
						alert(response.message);

                    } else { // Handle failure, e.g., show an error message
						spinner.style.display = "none";
                        alert('Error: ' + response.message);
                    }
                } else { // Handle HTTP error
					spinner.style.display = "none";
                    alert('HTTP Error: ' + xhr.status);
                }
            };

            xhr.onerror = function () { // Handle network error
				spinner.style.display = "none";
                alert('Network Error');
            };

            // Send the DELETE request
            xhr.send();
        });
    });
</script>
{% endblock %}
