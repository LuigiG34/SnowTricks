{% extends 'base.html.twig' %}

{% block title %}Trick - {{ trick.name }} {% endblock %}

{% block body %}

	{% set mainImage = null %}
	{% for image in trick.images %}
		{% if image.isMain %}
			{% set mainImage = '/uploads/' ~ image.name %}
		{% endif %}
	{% endfor %}

	{% if mainImage %}
	<style>
		#bg-img {
			background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url({{ mainImage }});
		}
	</style>
	{% else %}
	<style>
		#bg-img {
			background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('/assets/img/default.jpg');
		}
	</style>
	{% endif %}

	<style>
		#bg-img {
			background-size: cover;
			background-repeat: no-repeat;
			background-position: center;
			height: 600px;
		}

		.user-img {
			width: 50px;
			height: 50px;
			border-radius: 50px;
		}
	</style>


	<div class="container-fluid d-flex align-items-center justify-content-center flex-column" id="bg-img">
		<div class="container p-5 d-flex align-items-center justify-content-center">
			<section class="p-5 d-flex align-items-center justify-content-center">
				<div class="p-5 d-flex align-items-center justify-content-center flex-column">
					<h1 class="text-light">{{ trick.name }}</h1>
				</div>
			</section>
		</div>
	</div>
	<div class="container-fluid p-5">
		<div class="container">
			<div class="row">

				<div class="col">
					<div id="carouselExampleImages" class="carousel slide" data-bs-ride="carousel">
						<div class="carousel-indicators">
							{% for loopIndex, image in trick.images %}
								<button type="button" data-bs-target="#carouselExampleImages" data-bs-slide-to="{{ loopIndex }}" {% if loop.first %} class="active" aria-current="true" {% endif %} aria-label="Slide {{ loopIndex + 1 }}"></button>
							{% endfor %}
						</div>
						<div class="carousel-inner">
							{% for loopIndex, image in trick.images %}
								<div class="carousel-item {% if loop.first %}active{% endif %}">
									<img class="d-block w-100" height="400px" src="/uploads/{{ image.name }}" alt="Slide">
								</div>
							{% endfor %}
						</div>
						<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleImages" data-bs-slide="prev">
							<span class="carousel-control-prev-icon" aria-hidden="true"></span>
							<span class="visually-hidden">Previous</span>
						</button>
						<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleImages" data-bs-slide="next">
							<span class="carousel-control-next-icon" aria-hidden="true"></span>
							<span class="visually-hidden">Next</span>
						</button>
					</div>
				</div>

				<div class="col">
					<div id="carouselExampleVideos" class="carousel slide" data-bs-ride="carousel">
						<div class="carousel-indicators">
							{% for loopIndex, video in trick.videos %}
								<button type="button" data-bs-target="#carouselExampleVideos" data-bs-slide-to="{{ loopIndex }}" {% if loop.first %} class="active" aria-current="true" {% endif %} aria-label="Slide {{ loopIndex + 1 }}"></button>
							{% endfor %}
						</div>
						<div class="carousel-inner">
							{% for loopIndex, video in trick.videos %}
								<div class="carousel-item {% if loop.first %}active{% endif %}">
									<iframe width="100%" height="400px" src="{{ video.link }}"></iframe>
								</div>
							{% endfor %}
						</div>
						<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleVideos" data-bs-slide="prev">
							<span class="carousel-control-prev-icon" aria-hidden="true"></span>
							<span class="visually-hidden">Previous</span>
						</button>
						<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleVideos" data-bs-slide="next">
							<span class="carousel-control-next-icon" aria-hidden="true"></span>
							<span class="visually-hidden">Next</span>
						</button>
					</div>
				</div>


			</div>
			<p class=" py-5">{{ trick.description }}</p>

			<div class="d-flex align-items-center justify-content-center">
				<span class="badge bg-primary text-light m-2">Créé le :
					{{ trick.createdAt|date('Y-m-d') }}</span>
				<span class="badge bg-primary text-light m-2">Modifié le :
					{{ trick.updatedAt|date('Y-m-d') }}</span>
				<span class="badge bg-primary text-light m-2">Catégorie :
					{{ trick.category.name }}</span>
			</div>


			<hr class="mt-5">
			{% if app.user %}
			{{ form_start(form) }}
				{{ form_row(form.content) }}
				<button class="btn btn-primary w-100 mt-1">Soumettre</button>
			{{ form_end(form) }}
			{% else %}
					<p class="p-5 text-center">Veuillez vous connecter <a class="ms-2" href="{{ path('app_login') }}">ici</a></p>
			{% endif %}
			<hr class="mb-5">

			<div id="commentsContainer">
				{% for comment in comments %}
					<div class="col comment">
						<div class="d-flex align-items-center justify-content-start">
							<div>
								<img class="user-img" src="{{ comment.user.image }}">
							</div>
							<div class="m-3 p-3 border w-100 rounded">
								<small>
									<strong>{{ comment.user.username }}</strong>
									|
									{{ comment.createdAt|date('d/m/Y') }}</small>
								<p>{{ comment.content }}</p>
							</div>
						</div>
					</div>
				{% endfor %}
			</div>
			<div class="w-100 d-flex align-items-center justify-content-center">
					<div id="loadingSpinner" class="spinner-border text-primary" role="status">
						<span class="visually-hidden">Loading...</span>
					</div>
				</div>

				<div class="text-center mt-4">
					<button id="loadMoreButton" class="btn btn-primary">Load More</button>
				</div>
		</div>
	</div>


	<script>

	let comments = document.querySelectorAll('.comment');
    let offset = comments.length;
    document.getElementById('loadingSpinner').style.display = 'none';


    function loadMoreComments() { // Show the loading spinner
        document.getElementById('loadingSpinner').style.display = 'block';
		comments = document.querySelectorAll('.comment');
		offset = comments.length;
        fetch(`${window.location.pathname}/get-more-comments/${offset}`).then(response => response.text()).then(data => {
            if (data.length > 0) {
                const tricksContainer = document.getElementById('commentsContainer');
                tricksContainer.innerHTML += data;
            } else { // Disable the "Load More" button if no more tricks are available
                document.getElementById('loadMoreButton').disabled = true;
            }

            // Hide the loading spinner once the tricks are added
            document.getElementById('loadingSpinner').style.display = 'none';
        }).catch(error => {
            console.error('Error fetching more tricks:', error);

            // Hide the loading spinner in case of an error
            document.getElementById('loadingSpinner').style.display = 'none';
        });
    }

    document.getElementById('loadMoreButton').addEventListener('click', loadMoreComments);
	</script>
{% endblock %}
